services:
  factorio-fetch:
    command: |
      /bin/ash -c "
      if [[ ! -f /factorio/${FACTORIO_VERSION} ]]; then
        echo Fetch Factorio headless server version ${FACTORIO_VERSION}
        curl --location --output-dir /tmp --remote-name https://www.factorio.com/get-download/${FACTORIO_VERSION}/headless/linux64 --silent
        tar -Jxf /tmp/linux64 -C /
        touch /factorio/${FACTORIO_VERSION}
      else
        echo Factorio headless server version ${FACTORIO_VERSION} already exists ..
      fi
      "
    container_name: factorio-fetch
    image: alpine/curl
    restart: "no"
    tmpfs:
      - /tmp
    volumes:
      - "factorio-data:/factorio"
  factorio-headless:
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - factorio-headless:${FACTORIO_VERSION}
    container_name: factorio-headless
    depends_on:
      factorio-fetch:
        condition: service_completed_successfully
    image: factorio-headless:${FACTORIO_VERSION}
    ports:
      - "0.0.0.0:34197:34197/udp"
    restart: always
    volumes:
      - "factorio-data:/factorio"
      - "factorio-saves:/factorio/saves"
      - "./server-settings.json:/factorio/data/server-settings.json:z"
volumes:
  factorio-data:
    name: factorio-data
  factorio-saves:
    name: factorio-saves
